%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 471.375000 290.250000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 472 291
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 472 291
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /zero put
dup 34 /one put
dup 35 /two put
dup 36 /three put
dup 37 /five put
dup 38 /four put
dup 39 /seven put
dup 40 /six put
dup 41 /nine put
dup 42 /eight put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<





00>] def
/CharStrings 12 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/two 3 def
/three 4 def
/four 5 def
/five 6 def
/six 7 def
/seven 8 def
/eight 9 def
/nine 10 def
/uni2B91 11 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B64DFC330C1264D9E86DB21FFDE360EA73793134E310C35764956599F33D100A43A4E3DEAEEC09ED860F76048E234C00CF4055CF671E0F66D4F89095ECECEF7393056FEE33F2F50AB369B1E97BD4D6C93AD86197757D4563B738EE03BA985846BBFAF2307412DC7051A0CEE3E5D4CC7C63FA637D28DBE0069B3ABA784B4969CB725534E89C88B15562216FE868A01E336A8D7B3A6A7F92FA22B9289A2771D33700CDB9B8E71731F499BCA3E35DD77934AE78A2068561A883A69546AC49FB3A7A6F7880409C496C88A2E6289F38F89DBA4ECB1C0113469E8AAAEF8055393D349F4B2A424DDB070302718F1A3BC5290EBA5231E254B995E0F69519FE6BD6F94A843C92C1F8DD47C687E7D18A1EBAD2D663751FEDB3AAF74AB1F7F4385DE6BA9959C8711D22819B5EA69A38EC7AEE2B67966EB3CC5427C4B601510B81EDFA7E5D39CFD2EE902B8E15C9EF5ECC46A7E73EB469A650130ABD94F7E630AFEAE5BD1829F91D734BE0E277BDD83F7B97C0F2C39E09808BD15B6DAB81C655803C3A4706A512A15576427E79730390F08DDAF8F796CB2DDB057B49165B4F2FA2DC491E41C3361A473A89A504C3AC434BAE1F96EC09D61302A0305490CB4B9027C86A335401FDC2092F8DE9F9F47A17BC8CB5DACF83B0FCA964251B275E5CBF6AD79EFC2A711082CC6D0E5AB9D3E47D3F1DDF55B3C50E718B0258551B87C4FD3AF632FC4442D17501C5DDAC8D652030A96043D5F5D4DBEF4FE1C0F912022AE1DC8C920A147A
66B69C29D7B4D57ACA33518EED3FAE0B317866B8871BB2E79196A70A2137803E602CD7D304F08E23F280DEB408D4D7C3E5C427DD5A859627A03E12C8322A69767F43560A69DBD1BE4380E5D455710659B7982C7AC1AFA7CAF99997AE0DFE6481F7130B0563438240CF7516B074EF083094858834556C14526070C6BFD39576DF3D427DC0BBDE2A415D5500883AD94542361134BC94E4D601D296E8B1CDF8D5C3C65A18D48636C57FD715258F99A42951929AF63C09F231573B81A21FCC881BAD2D5FDD68408C80BB6A0ECCE1B2F26EDD699B4519D82DDFA7F56D82AC3418503EB059C3DC2D0444621CD85BD504E65087B475FA0D053923AAD2FDE5DABFDF09BAB818125770D45742676C53A53E9148D5FD9EE94340734EFB0E32990BDF0B0E82D791380B0538FA59897900BEA01BC48222D8D74EF96BFDE515D80B184C87D90A18E137BFD14A9681700CDAF9EF3D9F260EDB465BBE775DD40BD57AE67E79DD071402BFF3FD23B15E86607A2EEA606D296B72FF4C5CFA804144862D807B483BD8E041160563CB4BAEF8BD9AF5082D8B40312F312F3C0F74A4BF387209CD79B6ED2507D2BCF700181B98557E727D4A2E2E1D2A69E58399FFECC8C2F9AE8CC0941B2684535F393FE2A7797CAFDC25FBE2C0A3A123BB68B52CFFF4643D4B07431C88E6215007B5BD4D188BE67F8FEFAAE58CB512FBE36FFA1F484DE04663569C8AE9EA6492A38D5CF7D0DB59AB9BB2BEC8F8181DCEB31032751867D2DDB336486A7EF8B3B4BB801BF6BD5DCC6192261F3CEF756FE5C8DC508D433CC2507FDC0A3671D337029653FC0979942AE8A727D82DB0E9984C87EE2CCCFAC6E641B788D61DCF7E1525E3E7DE296ACB250DEF837007CB89C57B7615DAD257D09CB24B1FF484C1515FF0364AC1E7AE7C87239C0DE7CC83EACBCE52927060414C5F021B8A1512C1F20C1AD65FFD97ADA45B2F9C32C752E56827AFAF518FEA79FA142E1B4C2F868A033929B43BA588E38719ED965C03D77DA6530C2893E235985318FB7909369368DCC4AA9182BC6296E56F197549DE89649A33F927B76DF7663447BC6C78BB1C9960FA232BAF30372A7040EB98C3057196C194D9E6386197F2A37FF510B302B8751D0BC3692607C8B76CD0A8EC6107BDFAB70DB07E1E029C25A29EF96F8765FF2B29DC5732A1C9887022B18423E3AD7D7E1080382CED523E56ABD8DCABC9ADDCACD6DB235083ABFB6B1E8435197CDF6F2AAAF998B9F8C3530399123292643BD324DD7981B5A3D4B54F49A77822DAF5EFFDD0D45029298429C70F5910D6A09D3785D837EAFCE6957720FAA88EB8522FFC6049D5E82160274D7E2D2DFBCBA09005E951B4911C0D1A5516D25B2DA2FA3AF2EADD9A812CD2DC78F4D956ABF9F93E9D5ADE33024C1A4C70054032715D36B3B0B783E3586A6520CF3880BDC1C0316A47F8
BF9DBD4C1763520AD0319F2EEAB39EAB36824713B3D9E36DC16F75DAB104E4565371418F14D7107DEC86757AEBFB2C1B7BC9B4149AEA2FEC467B822D1C639EDE67F55DC58C87A94F1C5BCCC8CDA0DFF74FB323135FA0F8338759C9F29A0561336D19CD097D22C6F71FDB955661886ADF125EB1D16B5F0D20A1008E3994D2FAA5F0F72ADD02E8C2BD6ADCA7E411FF57665FDE91F04F890D668D31DBFB3CAB3EA2EF7092B7671E4FFDF1EE067D60F4C1BBAD2245D703DF7D503080E67AD147CDE11794589F305271285083DA69197D79E03950E8454293B142DBA131A03EED5895845F7DC8A37B47DAD80CE7AD7C298A40AD81C148777ABA4EF3127C0C440A953245F3D4DA7FCBEF6F4A47E031D3716945ADA7DDB9BF939DA9707875C9B9EC95A9AB240FBCAABB0D0D88CD2FE4E23D3246D04CDADB335658A43E35C0B82CB3D4485242B81C84CEBA00DAEFBF7BD44F8D1D5F52E3B3DEAAE035DE0B264EC348D2D92EE28F04175625F111512E956A4DB6453844A925372E604729ACB7FC9BAA489B5784BF94356D7D35D45644FA79A1CD2337AE1703E9D057E08FA3E82D03611BC8BC534B87FE1C6E7569E45AE3F6E18C83AD60FE984F0EF956693648BBBB04151CF2DAE6D49460F500A460A2A072E0984F37C93E73ACBDA0A749239B59A2986B861EF3F4B8B92CC0E00CF76A3436E6660C3B09A66BB8D351F16DBD8703E8853E61BC6186B14DC7C2A2F8CB94CD0831B7A1F9520B035387E2616A8B19A6B2F8D8AD5494F432804E7AF4B9EEB0E49A54F761CDCC36131717908378910EC2D81D9524CAE93BB0A883BD0BAEA459E406E47F2DB4A2A019F7AFD980A4141A2C34DA9464FC5758CDCAD3260812B21ECEFE807673BA8FC9D443FA18347C20D008DB945A94B337FC1DB81797E1D3AB3A873C7755A6169A74022575BB274729E8114F556C46A41F6F4765EDBC9678BC0352C7FC83E0C9252062605DC49536E9AD5CB239965C3C9E5757F51A7F21AE04DDE58C0D9552BDBBD889AA9B755E97DC2F62E5274B8780A28595A43A5EC01D5927C1BF23735308A32C952AA318DEAA083F28C69470A8731A6E255B3F8F85CF379F1E8932DE9F58779405CE2C3C69A0B96D889A41B3453D47A4AF752C5A32BD6551CBC7518A54BF465DBE7176D1AD7C350C98906E7D42D0BB9474FF94BF3A15CC06CE9EDA07EACEAEBC3A710F975FFB8D606D2F99353FB70A210687AC00DDCC9F102E43063A28EFE8110C22B8F1652F73AFEEC577BEEB5EF5E989FB93BCE2F4BDA5F43743085ECB1B341946DE004BF55EE3A2E220649428B180720C1126B4F9652F031EEA616243E96A52596BCBFDDE74C2CE8D654FB773BA11205AE857DFA8E783BF772229AC45406B2307F5AC1EA3F657C46FC3A82B53D85AA377683A3D3847DFF14C7FBDA968065AB071D85CD1CE848FF7108C3398
11BA61BD9CDF83AA5132BE528F87588B775E435C02D5CE23C52064A417EDF3292D3771FF4992402C89B6844C539D5405ED793DCA91A400355E5B68CCAFCA4170C07C3E77E5F6471A2F6CAA86BC550A424CF485DFD0F09CADE2891EA3E0492FC44871DD2E61218D857E58F52163D1730F08D84039D96DCEE080DFEE06FE07E76C51593C59776E54CE4BAFE7711DC7EBACF2CF39F9D78C9337C00FE920917B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-BoldItalic
%!FontType1-1.0: HelveticaNeue-BoldItalic 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-BoldItalic def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /F put
dup 34 /one put
dup 35 /zero put
dup 36 /two put
dup 37 /G put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1061 1 index div -481 2 index div 1530 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<


130E030F0123373E033F0133018C374014181F198C161B1F090F13655865162221271B168C191F404A5A3B0B58029A073D80CA94786B7FA4622C07FE2301DD072C62A47F6B7894CA803D07350001000000010000EA54F47C5F0F3CF5011903E800000000B643F87900000000D59BEF34FBDBFE1F05FA04750003000900020000000000000001000003CFFF27001D05DCFBDBFE9C05FA03E800D5000000000000000000000000000701F40032022CFFFD022C0061022CFFD70251FFFD02F70025022CFFDD0000001C00C400E60160018802100266000100000007009600090036000200020000000000140000020002C600020001B8000A2B00BA00010002000C2B01BA00030002000C2B01BF00030027002000190012000B000000122BBF00040024001D00170010000A000000122B00BF0001002A0023001B0013000C000000122BBF00020034002B00210018000F000000122B00BA0005000400112BB8000020457D691844B800002B0000
00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/two 3 def
/F 4 def
/G 5 def
/u20BC 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1061 -481 1530 1141}def
/UniqueID 4324732 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C977ACEB10D7B7CCAA782B3E10A4BEAFD6991C7A5E7DAF786CA93E9C71C4F0DC10D5157F4358B506C7FD39B455A52E7ADD4CCA4F8ED2977EC2BC902AF32D277217960D8EF6817C2EF53EF0C488EEEF821108CDD34623EDC61AD2B09174590DD5CA0996ABA2FC8BA4FE9D8B897F7AD85F1BE0318F34F0DB4864AC9F158FF07B8ED96F248A1099F0BB5172134E7FED2419476AC6E7065FF1E77078FB1DF111441F0FABCE361B671EE9E60213FC6DA6F6326521CBCF0801E498ADE145664EC3E787665688E5AA6EB7C2824EA892A5DCEC4EBA6021FDFFD881CBBDCFD5702AB714D43AA4E3A65BD57E217CF3B8D30B5AC977528FDED00DB764AF8580D60DFF90271E9F1190588E5D43C2A34DAC32CCC6B1817CD7520AB61870B9E4E8950DF1863D276F6A8F33E4B6A015AD1477B5168E6480AF43620D455D84FFE8C59DD972C7A330EFB2DBAE5BBC0D9DBCA3D77818C7E09EEE997C705DBED3BE7CC52A2D4F72DDD7B743B0FC64273359AD673DC841C306FEA4F3FB41B7433CBD6864BB8FDD45C7CB1FB2728A2B0587284A820B9B05FB043874B160F29D0187404B17D6A52D4FFECC684CB35D4DEF07956701B456803BB32873675D3875E149629D6EE6FFB4EE8DB4A4E1AB199385173D245DD1C3904C3816CB57A13642CFF95BC0A0653223CE3A17E3F0B3E61472AD149E49AC2B84A87AFAA3236D1F75A6E340623B2F232C61EDDA90B89C12F08250B5550CA6B6A69CBC0251E70DF7D843406F1A20CE07967DAD7454F

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-BoldItalic cguidfix
/F2.1/HelveticaNeue-BoldItalic renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 471.375 290.25 rc
0 290.25 m
471.375 290.25 l
471.375 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-778.625 856.625 m
1249.5 856.625 l
1249.5 -565.25 l
-778.625 -565.25 l
h
-778.625 856.625 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 458.5 -148 cm
-458 -437.75 m
-457 -192.75 l
-343.75 -192.75 l
-252.75 -311 l
-344 -437.75 l
h
-458 -437.75 m
S
-319.125 -435.68121 m
-319.125 -434.99164 -228.125 -315.72604 -228.125 -315.72604 c
-228.125 -315.72604 12.375 -315.69247 12.375 -315.00287 c
12.375 -314.31329 12.375 -437.75 12.375 -437.75 c
12.375 -437.75 -319.125 -436.37082 -319.125 -435.68121 c
h
-319.125 -435.68121 m
S
-233.68944 -307 m
-319.125 -194.50661 l
12.375 -193 l
12 -306 l
h
-233.68944 -307 m
S
0 i
1 1 1 sc
CM
30.508358 185.5564 m
36.229393 179.83539 36.229393 170.55981 30.508358 164.83881 c
24.787352 159.11777 15.511775 159.11777 9.7907696 164.83881 c
4.0697336 170.55981 4.0697336 179.83539 9.7907696 185.5564 c
15.511775 191.27744 24.787352 191.27744 30.508358 185.5564 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 458.5 -148 cm
-427.99164 -333.5564 m
-422.2706 -327.83539 -422.2706 -318.55981 -427.99164 -312.83881 c
-433.71265 -307.11777 -442.98822 -307.11777 -448.70923 -312.83881 c
-454.43027 -318.55981 -454.43027 -327.83539 -448.70923 -333.5564 c
-442.98822 -339.27744 -433.71265 -339.27744 -427.99164 -333.5564 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 20.149563 175.1976 cm
/F1.1[ 12 0 0 -12 0 0]sf
-3.336 3.8320007 m
(!)s
/Cs2 SC
1 1 1 sc
CM
90.59169 255.66756 m
96.312729 249.94656 96.312729 240.67097 90.59169 234.94998 c
84.870682 229.22894 75.595108 229.22894 69.8741 234.94998 c
64.153069 240.67097 64.153069 249.94656 69.8741 255.66756 c
75.595108 261.38861 84.870682 261.38861 90.59169 255.66756 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 458.5 -148 cm
-367.90829 -403.66757 m
-362.18729 -397.94656 -362.18729 -388.67099 -367.90829 -382.94998 c
-373.6293 -377.22894 -382.90488 -377.22894 -388.62589 -382.94998 c
-394.34692 -388.67099 -394.34692 -397.94656 -388.62589 -403.66757 c
-382.90488 -409.38861 -373.6293 -409.38861 -367.90829 -403.66757 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 80.232895 245.30878 cm
-3.336 3.8320007 m
(")s
/Cs2 SC
1 1 1 sc
CM
77.508354 93.709229 m
83.229393 87.988228 83.229393 78.712646 77.508354 72.991646 c
71.787354 67.270607 62.511776 67.270607 56.790768 72.991646 c
51.069733 78.712646 51.069733 87.988228 56.790768 93.709229 c
62.511776 99.430267 71.787354 99.430267 77.508354 93.709229 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 458.5 -148 cm
-380.99164 -241.70923 m
-375.2706 -235.98822 -375.2706 -226.71265 -380.99164 -220.99164 c
-386.71265 -215.27061 -395.98822 -215.27061 -401.70923 -220.99164 c
-407.43027 -226.71265 -407.43027 -235.98822 -401.70923 -241.70923 c
-395.98822 -247.43027 -386.71265 -247.43027 -380.99164 -241.70923 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 67.149567 83.350433 cm
-3.336 3.8320007 m
(#)s
/Cs2 SC
1 1 1 sc
CM
148.86862 185.5564 m
154.58966 179.83539 154.58966 170.55981 148.86862 164.83881 c
143.14761 159.11777 133.87204 159.11777 128.15103 164.83881 c
122.42999 170.55981 122.42999 179.83539 128.15103 185.5564 c
133.87204 191.27744 143.14761 191.27744 148.86862 185.5564 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 458.5 -148 cm
-309.63138 -333.5564 m
-303.91034 -327.83539 -303.91034 -318.55981 -309.63138 -312.83881 c
-315.35239 -307.11777 -324.62796 -307.11777 -330.34897 -312.83881 c
-336.07001 -318.55981 -336.07001 -327.83539 -330.34897 -333.5564 c
-324.62796 -339.27744 -315.35239 -339.27744 -309.63138 -333.5564 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 138.50983 175.1976 cm
-3.336 3.8320007 m
($)s
/Cs2 SC
1 1 1 sc
CM
254.84874 211.60005 m
260.56976 205.87904 260.56976 196.60347 254.84874 190.88246 c
249.12773 185.16142 239.85216 185.16142 234.13115 190.88246 c
228.41011 196.60347 228.41011 205.87904 234.13115 211.60005 c
239.85216 217.32109 249.12773 217.32109 254.84874 211.60005 c
h
254.84874 211.60005 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 458.5 -148 cm
-203.65126 -359.60007 m
-197.93022 -353.87906 -197.93022 -344.60349 -203.65126 -338.88248 c
-209.37227 -333.16144 -218.64784 -333.16144 -224.36885 -338.88248 c
-230.08989 -344.60349 -230.08989 -353.87906 -224.36885 -359.60007 c
-218.64784 -365.32108 -209.37227 -365.32108 -203.65126 -359.60007 c
h
-203.65126 -359.60007 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 244.48994 201.24126 cm
-3.336 3.8320007 m
(%)s
/Cs2 SC
1 1 1 sc
CM
235.2706 276.70923 m
240.99162 270.98822 240.99162 261.71265 235.2706 255.99164 c
229.54959 250.27061 220.27402 250.27061 214.55301 255.99164 c
208.83197 261.71265 208.83197 270.98822 214.55301 276.70923 c
220.27402 282.43027 229.54959 282.43027 235.2706 276.70923 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 458.5 -148 cm
-223.2294 -424.70923 m
-217.50838 -418.98822 -217.50838 -409.71265 -223.2294 -403.99164 c
-228.95041 -398.2706 -238.22598 -398.2706 -243.94699 -403.99164 c
-249.66803 -409.71265 -249.66803 -418.98822 -243.94699 -424.70923 c
-238.22598 -430.43027 -228.95041 -430.43027 -223.2294 -424.70923 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 224.9118 266.35043 cm
-3.336 3.8320007 m
(&)s
/Cs2 SC
1 1 1 sc
CM
437.50836 219.70923 m
443.2294 213.98822 443.2294 204.71265 437.50836 198.99164 c
431.78735 193.27061 422.51178 193.27061 416.79077 198.99164 c
411.06973 204.71265 411.06973 213.98822 416.79077 219.70923 c
422.51178 225.43027 431.78735 225.43027 437.50836 219.70923 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 458.5 -148 cm
-20.991642 -367.70923 m
-15.270607 -361.98822 -15.270607 -352.71265 -20.991642 -346.99164 c
-26.712648 -341.2706 -35.988224 -341.2706 -41.709232 -346.99164 c
-47.430267 -352.71265 -47.430267 -361.98822 -41.709232 -367.70923 c
-35.988224 -373.43027 -26.712648 -373.43027 -20.991642 -367.70923 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 427.14957 209.35043 cm
-3.336 3.8320007 m
(')s
/Cs2 SC
1 1 1 sc
CM
396.50836 276.70923 m
402.2294 270.98822 402.2294 261.71265 396.50836 255.99164 c
390.78735 250.2706 381.51178 250.2706 375.79077 255.99164 c
370.06973 261.71265 370.06973 270.98822 375.79077 276.70923 c
381.51178 282.43027 390.78735 282.43027 396.50836 276.70923 c
h
396.50836 276.70923 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 458.5 -148 cm
-61.991634 -424.70923 m
-56.270599 -418.98822 -56.270599 -409.71265 -61.991634 -403.99164 c
-67.712639 -398.2706 -76.98822 -398.2706 -82.709221 -403.99164 c
-88.43026 -409.71265 -88.43026 -418.98822 -82.709221 -424.70923 c
-76.98822 -430.43027 -67.712639 -430.43027 -61.991634 -424.70923 c
h
-61.991634 -424.70923 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 386.14957 266.35043 cm
-3.336 3.8320007 m
(\()s
/Cs2 SC
1 1 1 sc
CM
263.50836 73.709229 m
269.2294 67.988228 269.2294 58.71265 263.50836 52.991642 c
257.78735 47.270607 248.51178 47.270607 242.79077 52.991642 c
237.06973 58.71265 237.06973 67.988228 242.79077 73.709229 c
248.51178 79.430267 257.78735 79.430267 263.50836 73.709229 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 458.5 -148 cm
-194.99164 -221.70923 m
-189.27061 -215.98822 -189.27061 -206.71265 -194.99164 -200.99164 c
-200.71265 -195.27061 -209.98822 -195.27061 -215.70923 -200.99164 c
-221.43027 -206.71265 -221.43027 -215.98822 -215.70923 -221.70923 c
-209.98822 -227.43027 -200.71265 -227.43027 -194.99164 -221.70923 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 253.14957 63.350437 cm
-6.6719999 3.8320007 m
("!)[ 6.672000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
302.34024 126.70923 m
308.06128 120.98823 308.06128 111.71265 302.34024 105.99165 c
296.61923 100.27061 287.34366 100.27061 281.62265 105.99165 c
275.90161 111.71265 275.90161 120.98823 281.62265 126.70923 c
287.34366 132.43027 296.61923 132.43027 302.34024 126.70923 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 458.5 -148 cm
-156.15976 -274.70923 m
-150.43874 -268.98822 -150.43874 -259.71265 -156.15976 -253.99164 c
-161.88077 -248.27061 -171.15634 -248.27061 -176.87735 -253.99164 c
-182.59839 -259.71265 -182.59839 -268.98822 -176.87735 -274.70923 c
-171.15634 -280.43027 -161.88077 -280.43027 -156.15976 -274.70923 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 291.98145 116.35043 cm
-3.336 3.8320007 m
(\))s
/Cs2 SC
1 1 1 sc
CM
396.50836 78.709229 m
402.2294 72.988228 402.2294 63.71265 396.50836 57.991642 c
390.78735 52.270607 381.51178 52.270607 375.79077 57.991642 c
370.06973 63.71265 370.06973 72.988228 375.79077 78.709229 c
381.51178 84.430267 390.78735 84.430267 396.50836 78.709229 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 458.5 -148 cm
-61.991642 -226.70923 m
-56.270607 -220.98822 -56.270607 -211.71265 -61.991642 -205.99164 c
-67.712646 -200.27061 -76.988228 -200.27061 -82.709229 -205.99164 c
-88.430267 -211.71265 -88.430267 -220.98822 -82.709229 -226.70923 c
-76.988228 -232.43027 -67.712646 -232.43027 -61.991642 -226.70923 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 386.14957 68.350433 cm
-6.6719999 3.8320007 m
("")[ 6.672000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
439.38693 134.38692 m
445.53769 128.23616 445.53769 118.26383 439.38693 112.11308 c
433.23618 105.9623 423.26382 105.9623 417.11307 112.11308 c
410.96231 118.26383 410.96231 128.23616 417.11307 134.38692 c
423.26382 140.5377 433.23618 140.5377 439.38693 134.38692 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 458.5 -148 cm
-19.113081 -282.38693 m
-12.962296 -276.23618 -12.962296 -266.26382 -19.113081 -260.11307 c
-25.263834 -253.9623 -35.236168 -253.9623 -41.386921 -260.11307 c
-47.537704 -266.26382 -47.537704 -276.23618 -41.386921 -282.38693 c
-35.236168 -288.53769 -25.263834 -288.53769 -19.113081 -282.38693 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 428.25 123.25 cm
/F1.1[ 13 0 0 -13 0 0]sf
-7.2280002 4.3180008 m
("#)[ 7.228000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
251.89973 142.65463 m
257.62076 136.93364 257.62076 127.65806 251.89973 121.93705 c
246.17873 116.21601 236.90315 116.21601 231.18214 121.93705 c
225.46111 127.65806 225.46111 136.93364 231.18214 142.65463 c
236.90315 148.37567 246.17873 148.37567 251.89973 142.65463 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 458.5 -148 cm
-206.60027 -290.65463 m
-200.87923 -284.93362 -200.87923 -275.65805 -206.60027 -269.93704 c
-212.32127 -264.216 -221.59685 -264.216 -227.31786 -269.93704 c
-233.03889 -275.65805 -233.03889 -284.93362 -227.31786 -290.65463 c
-221.59685 -296.37567 -212.32127 -296.37567 -206.60027 -290.65463 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 241.54094 132.29584 cm
/F1.1[ 12 0 0 -12 0 0]sf
-3.336 3.8320007 m
(*)s
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 458.5 -148 cm
-363.76917 -395.4173 m
-257.88306 -410.81708 l
S
0 i
CM
208.53366 263.96844 m
200.18518 265.78583 l
201.04871 259.8483 l
h
208.53366 263.96844 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-249.96634 -411.96844 m
-258.31482 -413.78583 l
-257.45129 -407.8483 l
h
-249.96634 -411.96844 m
S
1 J
1 j
0.60000002 i
-423.70087 -323.1976 m
-344.53973 -323.1976 l
S
0 i
CM
121.96026 175.1976 m
113.96026 178.1976 l
113.96026 172.1976 l
h
121.96026 175.1976 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-336.53973 -323.1976 m
-344.53973 -326.1976 l
-344.53973 -320.1976 l
h
-336.53973 -323.1976 m
S
1 J
1 j
0.60000002 i
-400.51816 -242.77841 m
-405.85391 -250.02556 -412.81189 -260.46799 -419.41666 -273.375 c
-424.24753 -282.81543 -428.06525 -291.96378 -430.96912 -299.78937 c
S
0 i
CM
24.889622 159.3409 m
24.699059 150.79901 l
30.362623 152.77992 l
h
24.889622 159.3409 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-433.61038 -307.34088 m
-433.80093 -298.79901 l
-428.13739 -300.77994 l
h
-433.61038 -307.34088 m
S
1 J
1 j
0.60000002 i
-379.50427 -239.9725 m
-371.14114 -246.67847 -359.52072 -257.21426 -348.58334 -271.29166 c
-340.52301 -281.66605 -334.34479 -292.01889 -329.82916 -300.71826 c
S
0 i
CM
132.17903 159.90709 m
125.97439 154.03322 l
131.36658 151.40181 l
h
132.17903 159.90709 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-326.32098 -307.9071 m
-332.5256 -302.0332 l
-327.13342 -299.40179 l
h
-326.32098 -307.9071 m
S
1 J
1 j
0.60000002 i
-434.80728 -337.41449 m
-432.11743 -344.92813 -427.44958 -354.51721 -419.41666 -363.89084 c
-413.27914 -371.0527 -406.21783 -376.87445 -399.69684 -381.39142 c
S
0 i
CM
65.549225 237.68413 m
57.189259 235.92032 l
60.410385 230.85828 l
h
65.549225 237.68413 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-392.95078 -385.68414 m
-401.31073 -383.92032 l
-398.0896 -378.85828 l
h
-392.95078 -385.68414 m
S
1 J
1 j
0.60000002 i
-323.74088 -337.36136 m
-326.09924 -342.73276 -329.93903 -349.39139 -336.19003 -356.91177 c
-342.92645 -365.01617 -351.17062 -372.56638 -358.57071 -378.66547 c
S
0 i
CM
93.655434 235.6274 m
98.069183 228.31174 l
101.79115 233.01779 l
h
93.655434 235.6274 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-364.84457 -383.62741 m
-360.43082 -376.31174 l
-356.70883 -381.01779 l
h
-364.84457 -383.62741 m
S
1 J
1 j
0.60000002 i
-305.49152 -321.09402 m
-294.42041 -319.07663 -278.35202 -315.3049 -262.125 -308.54803 c
-251.90543 -304.29263 -243.30545 -299.55383 -236.4437 -295.19177 c
S
0 i
CM
228.66962 142.68883 m
223.74538 149.67108 l
220.3685 144.71158 l
h
228.66962 142.68883 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-229.83038 -290.68884 m
-234.75462 -297.67108 l
-238.1315 -292.71158 l
h
-229.83038 -290.68884 m
S
1 J
1 j
0.60000002 i
-231.5015 -278.52222 m
-247.20723 -276.30786 -274.20236 -271.69772 -305.34061 -262.95834 c
-331.12225 -255.72235 -353.41776 -247.43118 -368.84491 -241.15652 c
S
0 i
CM
82.273697 90.077965 m
90.81205 90.388596 l
88.502449 95.926262 l
h
82.273697 90.077965 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-376.22629 -238.07796 m
-367.68796 -238.3886 l
-369.99756 -243.92627 l
h
-376.22629 -238.07796 m
S
1 J
1 j
0.60000002 i
-228.27075 -352.60306 m
-237.33324 -353.84091 -250.1823 -354.16107 -265.25 -350.45834 c
-278.13779 -347.29126 -290.04739 -341.82037 -299.444 -336.60693 c
S
0 i
CM
152.17313 184.53221 m
160.58551 186.02612 l
157.52893 191.18919 l
h
152.17313 184.53221 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-306.32687 -332.5322 m
-297.91449 -334.02612 l
-300.97107 -339.18921 l
h
-306.32687 -332.5322 m
S
1 J
1 j
0.60000002 i
-165.48196 -278.9635 m
-165.64632 -288.80167 -167.49695 -302.25864 -174.625 -315 c
-179.69443 -324.06158 -186.53497 -331.1557 -193.09232 -336.47858 c
S
0 i
CM
258.93115 193.18117 m
263.642 186.05321 l
267.1673 190.90834 l
h
258.93115 193.18117 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-199.56886 -341.18115 m
-194.85799 -334.05322 l
-191.3327 -338.90836 l
h
-199.56886 -341.18115 m
S
1 J
1 j
0.60000002 i
-153.46324 -257.6958 m
-94.225998 -227.50099 l
S
0 i
CM
371.40149 75.867928 m
365.63641 82.173798 l
362.91159 76.828194 l
h
371.40149 75.867928 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-87.098526 -223.86794 m
-92.863602 -230.1738 l
-95.588394 -224.82819 l
h
-87.098526 -223.86794 m
S
1 J
1 j
0.60000002 i
-58.758629 -221.8261 m
-52.644459 -225.05994 -45.613503 -229.92258 -40.25 -236.91667 c
-37.936424 -239.93361 -36.144138 -243.07195 -34.757954 -246.17108 c
S
0 i
CM
426.28177 105.75719 m
420.89722 99.123436 l
426.58685 97.218636 l
h
426.28177 105.75719 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-32.218239 -253.75719 m
-37.602779 -247.12343 l
-31.91316 -245.21863 l
h
-32.218239 -253.75719 m
S
1 J
1 j
0.60000002 i
-190.82396 -209.44983 m
-178.89197 -208.20634 -160.52516 -206.94861 -139.20833 -207.75 c
-122.77385 -208.36784 -107.95663 -210.08286 -96.472389 -211.82042 c
S
0 i
CM
369.91806 65.119453 m
361.53696 66.780029 l
362.51166 60.859726 l
h
369.91806 65.119453 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-88.581955 -213.11946 m
-96.963036 -214.78003 l
-95.98835 -208.85973 l
h
-88.581955 -213.11946 m
S
1 J
1 j
0.60000002 i
-23.231274 -285.3544 m
-19.848932 -293.74405 -16.546925 -305.07968 -16.700872 -317.125 c
-16.79027 -324.1196 -18.032967 -330.41037 -19.760195 -335.82581 c
S
0 i
CM
435.75763 195.24663 m
435.95706 186.70494 l
441.52432 188.94225 l
h
435.75763 195.24663 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-22.74238 -343.24661 m
-22.542948 -334.70496 l
-16.975679 -336.94226 l
h
-22.74238 -343.24661 m
S
1 J
1 j
0.60000002 i
-45.453178 -361.32526 m
-209.9567 -407.68997 l
S
0 i
CM
240.84329 261.8602 m
247.72948 256.80249 l
249.35713 262.57748 l
h
240.84329 261.8602 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-217.65671 -409.8602 m
-210.77052 -404.80249 l
-209.14287 -410.57748 l
h
-217.65671 -409.8602 m
S
1 J
1 j
0.60000002 i
-85.978767 -419.73441 m
-98.640633 -423.91309 -119.58243 -429 -146.5 -429 c
-170.69295 -429 -193.68794 -424.89078 -209.96774 -421.02502 c
S
0 i
CM
240.77982 271.05502 m
249.27226 270.11771 l
247.79454 275.93289 l
h
240.77982 271.05502 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-217.72018 -419.05502 m
-209.22774 -418.11771 l
-210.70546 -423.93289 l
h
-217.72018 -419.05502 m
S
1 J
1 j
0.60000002 i
-63.79483 -402.45605 m
-45.686939 -377.28168 l
S
0 i
CM
417.4845 222.78723 m
415.24847 231.03346 l
410.37766 227.52988 l
h
417.4845 222.78723 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-41.015503 -370.78723 m
-43.251526 -379.03345 l
-48.122353 -375.52988 l
h
-41.015503 -370.78723 m
S
1 J
1 j
0.60000002 i
-45.98568 -356.70071 m
-189.48456 -350.33008 l
S
0 i
CM
261.02332 201.97527 m
269.1485 199.33302 l
268.88239 205.32712 l
h
261.02332 201.97527 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-197.47668 -349.97525 m
-189.3515 -347.33301 l
-189.6176 -353.32712 l
h
-197.47668 -349.97525 m
S
1 J
1 j
0.60000002 i
-219.75006 -214.05252 m
-237.70679 -217.28639 -270.33212 -222.73564 -305.34061 -226.5 c
-330.93225 -229.25179 -351.95294 -230.47476 -366.80634 -231.00484 c
S
0 i
CM
83.698204 83.230606 m
91.610344 80.005997 l
91.779701 86.003601 l
h
83.698204 83.230606 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-374.80179 -231.23061 m
-366.88965 -228.006 l
-366.72031 -234.0036 l
h
-374.80179 -231.23061 m
S
1 J
1 j
0.60000002 i
-377.05493 -228.14061 m
-362.50793 -225.13075 -337.543 -220.58762 -305.34061 -217.125 c
-276.16901 -213.98827 -248.6521 -212.55478 -229.89803 -211.90002 c
S
0 i
CM
236.60298 63.657108 m
228.69771 66.898499 l
228.51564 60.901264 l
h
236.60298 63.657108 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-221.89702 -211.6571 m
-229.80229 -214.8985 l
-229.98436 -208.90126 l
h
-221.89702 -211.6571 m
S
1 J
1 j
0.60000002 i
-165.53952 -249.73343 m
-166.01547 -243.44788 -167.78476 -236.06836 -172.54167 -229.57587 c
-175.3605 -225.72856 -178.88881 -222.65627 -182.57794 -220.21443 c
S
0 i
CM
268.86267 68.447212 m
277.33298 69.566925 l
274.50818 74.860352 l
h
268.86267 68.447212 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-189.63733 -216.44722 m
-181.16701 -217.56693 l
-183.99184 -222.86035 l
h
-189.63733 -216.44722 m
S
1 J
1 j
0.60000002 i
-206.45035 -225.95891 m
-206.19211 -233.37648 -204.57518 -242.29935 -199.36049 -249.41667 c
-196.71532 -253.02695 -193.44351 -255.76445 -189.99931 -257.84018 c
S
0 i
CM
275.80576 113.10531 m
267.27795 112.57968 l
269.72632 107.10195 l
h
275.80576 113.10531 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-182.69423 -261.10532 m
-191.22205 -260.57968 l
-188.77368 -255.10196 l
h
-182.69423 -261.10532 m
S
1 J
1 j
0.60000002 i
-376.90384 -233.78758 m
-361.80115 -236.55508 -336.04279 -241.84134 -305.34061 -250.45833 c
-279.20047 -257.79492 -255.98018 -265.72067 -239.90753 -271.55835 c
S
0 i
CM
226.0995 126.33226 m
217.5556 126.37347 l
219.63522 120.74541 l
h
226.0995 126.33226 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-232.4005 -274.33228 m
-240.9444 -274.37347 l
-238.86478 -268.74539 l
h
-232.4005 -274.33228 m
S
1 J
1 j
0.60000002 i
-225.43127 -358.41739 m
-230.39053 -363.38901 -235.63712 -370.24692 -238.16667 -378.65921 c
-239.41739 -382.81863 -239.87125 -386.91702 -239.82402 -390.77042 c
S
0 i
CM
219.61673 250.71622 m
215.69695 243.12444 l
221.65532 242.41899 l
h
219.61673 250.71622 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-238.88327 -398.71622 m
-242.80305 -391.12442 l
-236.84468 -390.41898 l
h
-238.88327 -398.71622 m
S
1 J
1 j
0.60000002 i
-221.81418 -405.6304 m
-217.20406 -401.14914 -212.44946 -394.92404 -210.04167 -386.91666 c
-208.6302 -382.22269 -208.19408 -377.47794 -208.32831 -373.01224 c
S
0 i
CM
249.22449 217.06935 m
253.15068 224.65784 l
247.19289 225.3683 l
h
249.22449 217.06935 m
f
0 J
0 j
1 0 0 -1 458.5 -148 cm
-209.27551 -365.06937 m
-205.34932 -372.65784 l
-211.30711 -373.36832 l
h
-209.27551 -365.06937 m
S
0.19215687 0 0.40392157 sc
1 0 0 -1 451.5 274.70087 cm
/F2.1[ 16 0 0 -16 0 0]sf
-7.802 6.2679443 m
(!)s
/F2.1[ 11 0 0 -11 0 0]sf
1.686 6.2679443 m
(")s
1 0 0 -1 26.5 266.70087 cm
/F2.1[ 16 0 0 -16 0 0]sf
-7.802 6.2679443 m
(!)s
/F2.1[ 11 0 0 -11 0 0]sf
1.686 6.2679443 m
(#)s
1 0 0 -1 447.5 64.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-7.802 6.2679443 m
(!)s
/F2.1[ 11 0 0 -11 0 0]sf
1.686 6.2679443 m
($)s
0 0 0 sc
1 0 0 -1 224.9118 15 cm
/F2.1[ 16 0 0 -16 0 0]sf
-6.072 6.2679443 m
(%)s
ep
end
%%Trailer
%%EOF
